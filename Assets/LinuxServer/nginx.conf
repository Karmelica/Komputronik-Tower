# Konfiguracja Nginx dla Unity WebGL
# Zapisz jako /etc/nginx/sites-available/unity-game

server {
    listen 80;
    server_name twoja-domena.com;  # Zmień na swoją domenę lub IP serwera
    
    root /var/www/unity-game;
    index index.html;
    
    # Kompresja gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/wasm;
    
    # Nagłówki dla Unity WebGL
    location / {
        try_files $uri $uri/ =404;
        
        # CORS headers
        add_header 'Cross-Origin-Opener-Policy' 'same-origin' always;
        add_header 'Cross-Origin-Embedder-Policy' 'require-corp' always;
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type' always;
    }
    
    # Obsługa plików Unity WebGL
    location ~* \.(wasm|js|data)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # CORS headers
        add_header 'Cross-Origin-Opener-Policy' 'same-origin' always;
        add_header 'Cross-Origin-Embedder-Policy' 'require-corp' always;
    }
    
    # Obsługa skompresowanych plików Unity
    location ~* \.(wasm|js|data)\.gz$ {
        gzip off;
        add_header Content-Encoding gzip;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Ustaw poprawne MIME types
        location ~* \.wasm\.gz$ {
            add_header Content-Type "application/wasm";
        }
        location ~* \.js\.gz$ {
            add_header Content-Type "application/javascript";
        }
        location ~* \.data\.gz$ {
            add_header Content-Type "application/octet-stream";
        }
    }
    
    # Logowanie
    access_log /var/log/nginx/unity-game.access.log;
    error_log /var/log/nginx/unity-game.error.log;
}
